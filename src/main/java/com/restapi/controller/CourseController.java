package com.restapi.controllers;
import com.restapi.grpc.CourseGRPCAutoGenerated;
import com.restapi.grpc.CourseGRPCAutoGenerated.Course;
import com.restapi.grpc.CourseGRPCAutoGenerated.Courses;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import com.restapi.repositories.CourseRepository;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.util.List;
@RestController
@RequestMapping("/course")
public class CourseController {
	private static final Log log = LogFactory.getLog(CourseController.class);
	@Autowired
	CourseRepository courseRepository;
	@GetMapping
	public Courses getAllCourses() {
		return courseRepository.getAllCourses();
	}
	@GetMapping("/{id}")
	public Course getCourse(@PathVariable Integer id) {
		log.info("/course/"+id);
		// the Course DTO that we’re returning from the controller layer is not a standard POJO. 
		// That’s going to be the trigger for it to be converted to protocol buffer messages before being transferred back to the Client.
		return courseRepository.getCourse(id);
	}
}